#include <stdio.h>
#define N 20
int checkcompatibility(int g[][N],int x[],int k,int i,int n){
    int j=1;
    if(k==1)
      return 1;
    for(j=1;j<k;j++){
        if(x[j]==i)
          return 0;
    } 
    if(g[x[k-1]][i]==0)
      return 0;
    return 1;  
}
void hamiltonian(int g[][N],int x[],int k,int n){
    int i;
    if(k>n)
      return;
    for(i=1;i<=n;i++){
        if(checkcompatibility(g,x,k,i,n)){
            x[k]=i;
            hamiltonian(g,x,k+1,n);
           // if(x[n]!=0)
             // return;
        }
    }  
}
int main() {
    int t;
    int g[N][N];
    scanf("%d",&t);
    while(t--){
        int i,j,m,n;
        scanf("%d %d",&n,&m);
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                g[i][j]=0;
            }
        }
        for(i=1;i<=m;i++){
            int a,b;
            scanf("%d %d",&a,&b);
            g[a][b]=g[b][a]=1;
        }
        int x[n+1];
        x[n]=0;
        hamiltonian(g,x,1,n);
        if(x[n]==0)
          printf("0\n");
        else
          printf("1\n");
    }
	return 0;
}